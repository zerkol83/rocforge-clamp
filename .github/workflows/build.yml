name: Clamp CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  rocm-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [default, parallel]
    container:
      image: ghcr.io/rocm/dev:6.4.4-ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean workspace safely
        run: |
          set -euo pipefail
          echo "Container image: $(cat /etc/os-release | grep PRETTY_NAME)"
          git fetch origin main --prune
          git reset --hard FETCH_HEAD
          git clean -ffdX
          echo "HEAD: $(git rev-parse HEAD)"


      - name: Cache ROCm toolchain
        uses: actions/cache@v4
        with:
          path: /opt/rocm
          key: rocm-${{ runner.os }}-6.4.4-ubuntu-20.04

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y cmake ninja-build g++ python3

      - name: Install Python dependencies
        run: |
          python3 -m pip install --user PyYAML requests

      - name: Validate ROCm cache
        run: |
          status="ok"
          if ls images/*.tar.gz >/dev/null 2>&1; then
            for archive in images/*.tar.gz; do
              echo "Validating $archive"
              if ! gzip -t "$archive"; then
                echo "::warning::gzip validation failed for $archive"
                status="warn"
                continue
              fi
              sha=$(sha256sum "$archive" | awk '{print $1}')
              echo "$archive sha256=$sha"
              if command -v docker >/dev/null 2>&1; then
                if docker load -i "$archive"; then
                  echo "Loaded image: $(basename "$archive")"
                else
                  echo "::warning::docker load failed for $archive"
                  status="warn"
                fi
              else
                echo "::warning::Docker unavailable; skipping load for $archive"
                status="warn"
              fi
            done
          else
            echo "::warning::No cached ROCm images found."
            status="warn"
          fi

      - name: Show cached CI mode
        run: python3 -m rocforge_ci mode show

      - name: Smart bootstrap
        run: |
          python3 -m rocforge_ci smart-bootstrap || python3 -m rocforge_ci offline-bootstrap

      - name: Configure
        run: cmake -S . -B build -G Ninja -DROCM_SNAPSHOT_JSON=build/rocm_snapshot.json

      - name: Build
        run: cmake --build build

      - name: Test
        run: ctest --output-on-failure --test-dir build

      - name: Run Python tests
        run: |
          python3 -m unittest tests.cli.test_clamp_cli
          python3 -m unittest tests.clamp.test_clamp_extension
          python3 -m unittest tests.clamp.test_rocm_verifier
          python3 ci/tests/test_ci_mode.py

      - name: Configure Clamp
        run: |
          export PATH=/opt/rocm/bin:$PATH
          cmake -S clamp -B build -G Ninja -DCMAKE_PREFIX_PATH=/opt/rocm -DROCM_SNAPSHOT_JSON=build/rocm_snapshot.json

      - name: Build Clamp
        run: |
          export PATH=/opt/rocm/bin:$PATH
          cmake --build build

      - name: Run Tests
        run: |
          export PATH=/opt/rocm/bin:$PATH
          if [ "${{ matrix.config }}" = "parallel" ]; then
            ctest --test-dir build --output-on-failure -j 4
          else
            ctest --test-dir build --output-on-failure
          fi

      - name: Reset CI mode marker
        if: always()
        run: python3 -m rocforge_ci mode reset

      - name: Archive Telemetry
        if: matrix.config == 'parallel'
        uses: actions/upload-artifact@v4
        with:
          name: clamp-telemetry-${{ matrix.config }}
          path: build/telemetry
          if-no-files-found: warn
